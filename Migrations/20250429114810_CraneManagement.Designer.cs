// <auto-generated />
using System;
using AspnetCoreMvcFull.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AspnetCoreMvcFull.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250429114810_CraneManagement")]
    partial class CraneManagement
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AspnetCoreMvcFull.Models.Breakdown", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ActualUrgentEndTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CraneId")
                        .HasColumnType("integer");

                    b.Property<string>("HangfireJobId")
                        .HasColumnType("text");

                    b.Property<string>("Reasons")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UrgentEndTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("UrgentStartTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CraneId");

                    b.ToTable("Breakdowns");
                });

            modelBuilder.Entity("AspnetCoreMvcFull.Models.Crane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<string>("Ownership")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cranes");
                });

            modelBuilder.Entity("AspnetCoreMvcFull.Models.Role.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("LdapUser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("LdapUser", "RoleName")
                        .IsUnique();

                    b.ToTable("UserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 4, 29, 19, 48, 10, 448, DateTimeKind.Local).AddTicks(7690),
                            CreatedBy = "system",
                            LdapUser = "PIC1",
                            Notes = "Default admin user created by seeder",
                            RoleName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 4, 29, 19, 48, 10, 448, DateTimeKind.Local).AddTicks(7980),
                            CreatedBy = "system",
                            LdapUser = "PIC1",
                            Notes = "Default admin user created by seeder",
                            RoleName = "pic"
                        });
                });

            modelBuilder.Entity("AspnetCoreMvcFull.Models.Breakdown", b =>
                {
                    b.HasOne("AspnetCoreMvcFull.Models.Crane", "Crane")
                        .WithMany("Breakdowns")
                        .HasForeignKey("CraneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crane");
                });

            modelBuilder.Entity("AspnetCoreMvcFull.Models.Crane", b =>
                {
                    b.Navigation("Breakdowns");
                });
#pragma warning restore 612, 618
        }
    }
}
