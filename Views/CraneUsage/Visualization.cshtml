<!-- Views/CraneUsage/Visualization.cshtml -->
@model AspnetCoreMvcFull.ViewModels.CraneUsage.CraneUsageVisualizationViewModel

@{
  ViewData["Title"] = "Visualisasi Penggunaan Crane";
  Layout = "_ContentNavbarLayout";
}

@if (ViewBag.SuccessMessage != null)
{
  <div class="alert alert-success alert-dismissible fade show" role="alert">
    @ViewBag.SuccessMessage
    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
  </div>
}
@if (ViewBag.ErrorMessage != null)
{
  <div class="alert alert-danger alert-dismissible fade show" role="alert">
    @ViewBag.ErrorMessage
    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
  </div>
}

<h1>Visualisasi Penggunaan Crane</h1>
<p class="lead">Visualisasi penggunaan crane dalam 24 jam</p>
<div class="card mb-4">
  <div class="card-header">
    <i class="fas fa-filter me-1"></i>
    Filter
  </div>
  <div class="card-body">
    <form asp-action="Visualization" method="get" id="filterForm">
      <div class="row g-3">
        <div class="col-md-4">
          <label asp-for="CraneId" class="form-label">Crane</label>
          <select asp-for="CraneId" asp-items="Model.CraneList" class="form-select" required>
            <option value="">-- Pilih Crane --</option>
          </select>
        </div>
        <div class="col-md-4">
          <label asp-for="Date" class="form-label">Tanggal</label>
          <input asp-for="Date" class="form-control" type="date" required />
        </div>
        <div class="col-md-4 d-flex align-items-end">
          <button type="submit" class="btn btn-primary">
            <i class="fas fa-search me-1"></i> Tampilkan
          </button>
        </div>
      </div>
    </form>
  </div>
</div>

<div class="row">
  <div class="col-lg-8">
    <div class="card mb-4">
      <div class="card-header">
        <i class="fas fa-chart-bar me-1"></i>
        Penggunaan Crane <strong>@Model.CraneName</strong> pada <strong>@Model.Date.ToString("dd MMMM yyyy")</strong>
      </div>
      <div class="card-body">
        <div class="crane-usage-chart">
          <div class="chart-container" style="position: relative; height:600px;">
            <div class="hour-labels">
              @for (int i = 0; i <= 24; i++)
              {
                <div class="hour-label" style="bottom: @(i * 100 / 24)%;">@i</div>
              }
            </div>
            <div class="usage-bar">
              @for (int i = 0; i < 24; i++)
              {
                var hourData = Model.HourlyData[i];
                <div class="hour-segment"
                  style="height: @(100 / 24)%; bottom: @(i * 100 / 24)%; background-color: @hourData.ColorCode;"
                  data-hour="@i" data-category="@hourData.Category" data-subcategory="@hourData.SubcategoryName"
                  data-booking="@hourData.BookingNumber" data-maintenance="@hourData.MaintenanceTitle"
                  data-notes="@hourData.Notes">
                  @i:00 - @(i+1):00
                </div>
              }
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="col-lg-4">
    <div class="card mb-4">
      <div class="card-header">
        <i class="fas fa-info-circle me-1"></i>
        Detail Segmen
      </div>
      <div class="card-body">
        <div id="segmentDetail">
          <p class="text-center text-muted">Klik pada segmen di chart untuk melihat detailnya</p>
        </div>
      </div>
    </div>

    <div class="card mb-4">
      <div class="card-header">
        <i class="fas fa-palette me-1"></i>
        Legenda
      </div>
      <div class="card-body">
        <div class="legend-container">
          <div class="legend-item">
            <div class="legend-color" style="background-color: #28a745;"></div>
            <div class="legend-label">Operating</div>
          </div>
          <div class="legend-item">
            <div class="legend-color" style="background-color: #ffc107;"></div>
            <div class="legend-label">Delay</div>
          </div>
          <div class="legend-item">
            <div class="legend-color" style="background-color: #6c757d;"></div>
            <div class="legend-label">Standby</div>
          </div>
          <div class="legend-item">
            <div class="legend-color" style="background-color: #17a2b8;"></div>
            <div class="legend-label">Service</div>
          </div>
          <div class="legend-item">
            <div class="legend-color" style="background-color: #dc3545;"></div>
            <div class="legend-label">Breakdown</div>
          </div>
        </div>
      </div>
    </div>

    <div class="card mb-4">
      <div class="card-header">
        <i class="fas fa-chart-pie me-1"></i>
        Ringkasan
      </div>
      <div class="card-body">
        <div id="usageSummary">
          @{
            var operatingHours = Model.HourlyData.Count(h => h.Category == "Operating");
            var delayHours = Model.HourlyData.Count(h => h.Category == "Delay");
            var standbyHours = Model.HourlyData.Count(h => h.Category == "Standby");
            var serviceHours = Model.HourlyData.Count(h => h.Category == "Service");
            var breakdownHours = Model.HourlyData.Count(h => h.Category == "Breakdown");

            var totalAvailableHours = operatingHours + delayHours + standbyHours;
            var totalMaintenanceHours = serviceHours + breakdownHours;

            var availablePercentage = Math.Round((double)totalAvailableHours / 24 * 100, 2);
            var maintenancePercentage = Math.Round((double)totalMaintenanceHours / 24 * 100, 2);
          }

          <h5>Jam Penggunaan</h5>
          <div class="progress mb-3" style="height: 25px;">
            <div class="progress-bar bg-success" role="progressbar" style="width: @(operatingHours * 100 / 24)%;"
              title="Operating: @operatingHours jam">
              @operatingHours
            </div>
            <div class="progress-bar bg-warning" role="progressbar" style="width: @(delayHours * 100 / 24)%;"
              title="Delay: @delayHours jam">
              @delayHours
            </div>
            <div class="progress-bar bg-secondary" role="progressbar" style="width: @(standbyHours * 100 / 24)%;"
              title="Standby: @standbyHours jam">
              @standbyHours
            </div>
            <div class="progress-bar bg-info" role="progressbar" style="width: @(serviceHours * 100 / 24)%;"
              title="Service: @serviceHours jam">
              @serviceHours
            </div>
            <div class="progress-bar bg-danger" role="progressbar" style="width: @(breakdownHours * 100 / 24)%;"
              title="Breakdown: @breakdownHours jam">
              @breakdownHours
            </div>
          </div>

          <table class="table table-sm">
            <tr>
              <td>Operating</td>
              <td>@operatingHours jam</td>
              <td>@Math.Round((double)operatingHours / 24 * 100, 2)%</td>
            </tr>
            <tr>
              <td>Delay</td>
              <td>@delayHours jam</td>
              <td>@Math.Round((double)delayHours / 24 * 100, 2)%</td>
            </tr>
            <tr>
              <td>Standby</td>
              <td>@standbyHours jam</td>
              <td>@Math.Round((double)standbyHours / 24 * 100, 2)%</td>
            </tr>
            <tr>
              <td>Service</td>
              <td>@serviceHours jam</td>
              <td>@Math.Round((double)serviceHours / 24 * 100, 2)%</td>
            </tr>
            <tr>
              <td>Breakdown</td>
              <td>@breakdownHours jam</td>
              <td>@Math.Round((double)breakdownHours / 24 * 100, 2)%</td>
            </tr>
            <tr class="table-active">
              <th>Available Time</th>
              <th>@totalAvailableHours jam</th>
              <th>@availablePercentage%</th>
            </tr>
            <tr class="table-active">
              <th>Maintenance Time</th>
              <th>@totalMaintenanceHours jam</th>
              <th>@maintenancePercentage%</th>
            </tr>
          </table>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="d-flex justify-content-between mb-4">
  <a asp-action="Index" class="btn btn-secondary">
    <i class="fas fa-arrow-left me-1"></i> Kembali ke Daftar
  </a>
  <a asp-action="Create" class="btn btn-success">
    <i class="fas fa-plus me-1"></i> Tambah Penggunaan Baru
  </a>
</div>

<style>
  .crane-usage-chart {
    position: relative;
    margin: 20px 0;
  }

  .chart-container {
    display: flex;
    align-items: center;
  }

  .hour-labels {
    position: absolute;
    right: -30px;
    height: 100%;
    width: 30px;
    z-index: 10;
  }

  .hour-label {
    position: absolute;
    font-size: 12px;
    margin-right: 5px;
    transform: translateY(50%);
  }

  .usage-bar {
    position: relative;
    width: 100%;
    height: 100%;
    border-left: 1px solid #ccc;
    border-right: 1px solid #ccc;
    border-bottom: 1px solid #ccc;
  }

  .hour-segment {
    position: absolute;
    width: 100%;
    border-top: 1px solid #fff;
    color: #fff;
    font-weight: bold;
    padding: 5px;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    cursor: pointer;
    transition: all 0.2s;
  }

  .hour-segment:hover {
    filter: brightness(1.1);
    z-index: 5;
  }

  .legend-container {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
  }

  .legend-item {
    display: flex;
    align-items: center;
    margin-right: 15px;
  }

  .legend-color {
    width: 20px;
    height: 20px;
    margin-right: 5px;
    border-radius: 3px;
  }
</style>

@section PageScripts {
  <script>
    $(document).ready(function () {
      // Handle click on hour segments
      $('.hour-segment').click(function () {
        // Get data from attributes
        var hour = $(this).data('hour');
        var category = $(this).data('category');
        var subcategory = $(this).data('subcategory');
        var booking = $(this).data('booking');
        var maintenance = $(this).data('maintenance');
        var notes = $(this).data('notes');

        // Create detail HTML
        var detailHtml = `
                              <h5>${hour}:00 - ${hour + 1}:00</h5>
                              <dl class="row mb-0">
                                  <dt class="col-sm-4">Status</dt>
                                  <dd class="col-sm-8">
                                      <span class="badge" style="background-color: ${$(this).css('background-color')}">
                                          ${category}
                                      </span>
                                  </dd>
                          `;

        if (subcategory) {
          detailHtml += `
                                  <dt class="col-sm-4">Subkategori</dt>
                                  <dd class="col-sm-8">${subcategory}</dd>
                              `;
        }

        if (booking) {
          detailHtml += `
                                  <dt class="col-sm-4">Booking</dt>
                                  <dd class="col-sm-8">${booking}</dd>
                              `;
        }

        if (maintenance) {
          detailHtml += `
                                  <dt class="col-sm-4">Maintenance</dt>
                                  <dd class="col-sm-8">${maintenance}</dd>
                              `;
        }

        if (notes) {
          detailHtml += `
                                  <dt class="col-sm-4">Catatan</dt>
                                  <dd class="col-sm-8">${notes}</dd>
                              `;
        }

        detailHtml += `</dl>`;

        // Update the detail panel
        $('#segmentDetail').html(detailHtml);

        // Highlight the selected segment
        $('.hour-segment').removeClass('selected');
        $(this).addClass('selected');
      });

      // Select the first segment by default
      if ($('.hour-segment').length > 0) {
        $('.hour-segment').first().click();
      }
    });
  </script>
}
