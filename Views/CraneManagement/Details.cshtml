<!-- Views/CraneManagement/Details.cshtml -->
@model AspnetCoreMvcFull.ViewModels.CraneManagement.CraneDetailViewModel
@{
    ViewData["Title"] = "Crane Details";
    Layout = "_ContentNavbarLayout";
}

<div class="row">
    <div class="col-12">
        <div class="card mb-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">Crane Details: @Model.Code</h5>
                <div>
                    <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                        <i class="bx bx-arrow-back me-1"></i> Back to List
                    </a>
                    <a href="@Url.Action("Edit", new { id = Model.Id })" class="btn btn-primary">
                        <i class="bx bx-edit me-1"></i> Edit
                    </a>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label">Crane Code</label>
                            <input type="text" class="form-control" value="@Model.Code" readonly />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Capacity (ton)</label>
                            <input type="number" class="form-control" value="@Model.Capacity" readonly />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Status</label>
                            <input type="text" class="form-control" value="@Model.Status" readonly />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Ownership</label>
                            <input type="text" class="form-control" value="@Model.Ownership" readonly />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="mb-0">Crane Image</h5>
                            </div>
                            <div class="card-body text-center">
                                @if (!string.IsNullOrEmpty(Model.ImagePath))
                                {
                                    <img src="@Model.ImagePath" alt="@Model.Code" class="img-fluid img-thumbnail" style="max-height: 300px;" />
                                }
                                else
                                {
                                    <div class="p-5 text-muted">
                                        <i class="bx bx-image-alt fs-1"></i>
                                        <p>No image available</p>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <hr />

                <!-- Breakdown Section -->
                <div class="row mt-4">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <h5 class="mb-0">Maintenance Status</h5>
                                @if (Model.Status == AspnetCoreMvcFull.Models.CraneStatus.Available)
                                {
                                    <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#breakdownModal">
                                        <i class="bx bx-error-circle me-1"></i> Set to Breakdown
                                    </button>
                                }
                                else
                                {
                                    <form method="post" action="@Url.Action("SetAvailable", new { id = Model.Id })" style="display: inline;">
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn btn-success">
                                            <i class="bx bx-check-circle me-1"></i> Set to Available
                                        </button>
                                    </form>
                                }
                            </div>
                            <div class="card-body">
                                @if (Model.Status == AspnetCoreMvcFull.Models.CraneStatus.Maintenance)
                                {
                                    <div class="alert alert-danger">
                                        <h5 class="alert-heading mb-2">Crane is currently under maintenance</h5>
                                        @if (Model.Breakdowns.Any())
                                        {
                                            var latestBreakdown = Model.Breakdowns.First();
                                            <div>
                                                <p><strong>Start time:</strong> @latestBreakdown.UrgentStartTime.ToString("dd/MM/yyyy HH:mm")</p>
                                                <p><strong>Estimated end time:</strong> @latestBreakdown.UrgentEndTime.ToString("dd/MM/yyyy HH:mm")</p>
                                                <p><strong>Reason:</strong> @latestBreakdown.Reasons</p>
                                            </div>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <div class="alert alert-success">
                                        <h5 class="alert-heading mb-2">Crane is available for booking</h5>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Recent Breakdowns Section -->
                <div class="row mt-4">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <h5 class="mb-0">Recent Breakdown History</h5>
                                <a href="@Url.Action("Index", "BreakdownHistory", new { craneId = Model.Id })" class="btn btn-outline-primary">
                                    <i class="bx bx-history me-1"></i> View Full History
                                </a>
                            </div>
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Start Time</th>
                                            <th>End Time</th>
                                            <th>Actual End Time</th>
                                            <th>Reason</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model.Breakdowns.Any())
                                        {
                                            @foreach (var breakdown in Model.Breakdowns.Take(5))
                                            {
                                                <tr>
                                                    <td>@breakdown.UrgentStartTime.ToString("dd/MM/yyyy HH:mm")</td>
                                                    <td>@breakdown.UrgentEndTime.ToString("dd/MM/yyyy HH:mm")</td>
                                                    <td>
                                                        @if (breakdown.ActualUrgentEndTime.HasValue)
                                                        {
                                                            @breakdown.ActualUrgentEndTime.Value.ToString("dd/MM/yyyy HH:mm")
                                                        }
                                                        else
                                                        {
                                                            <span class="badge bg-warning">Not completed</span>
                                                        }
                                                    </td>
                                                    <td>@breakdown.Reasons</td>
                                                </tr>
                                            }
                                        }
                                        else
                                        {
                                            <tr>
                                                <td colspan="4" class="text-center">No breakdown history</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Breakdown Modal -->
<div class="modal fade" id="breakdownModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" action="@Url.Action("Breakdown", new { id = Model.Id })">
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title">Set Crane to Breakdown</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Start Time</label>
                        <input type="datetime-local" class="form-control" name="UrgentStartTime" value="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">End Time</label>
                        <input type="datetime-local" class="form-control" name="UrgentEndTime" value="@DateTime.Now.AddHours(1).ToString("yyyy-MM-ddTHH:mm")" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Reason</label>
                        <textarea class="form-control" name="Reasons" rows="3" required></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Set to Breakdown</button>
                </div>
            </form>
        </div>
    </div>
</div>
