@model AspnetCoreMvcFull.ViewModels.Role.RoleIndexViewModel
@{
  ViewData["Title"] = "Role Management";
  Layout = "_ContentNavbarLayout";
}

@section PageStyles {
  <style>
    .user-count {
      display: inline-flex;
      align-items: center;
      padding: 0.25rem 0.5rem;
      background-color: #f5f5f9;
      border-radius: 0.25rem;
      font-size: 0.8125rem;
    }

    .card-title {
      text-transform: uppercase;
      font-weight: 600;
    }

    .role-avatar {
      width: 32px;
      height: 32px;
      border-radius: 50%;
      background-color: #e7e7ff;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      margin-right: 0.5rem;
    }

    .avatar-group {
      display: flex;
      align-items: center;
    }

    .avatar-group .avatar {
      width: 30px;
      height: 30px;
      border-radius: 50%;
      border: 2px solid #fff;
      margin-left: -10px;
      display: flex;
      align-items: center;
      justify-content: center;
      background-color: #e7e7ff;
    }

    .avatar-group .avatar:first-child {
      margin-left: 0;
    }

    .avatar-more {
      width: 30px;
      height: 30px;
      border-radius: 50%;
      border: 2px solid #fff;
      margin-left: -10px;
      display: flex;
      align-items: center;
      justify-content: center;
      background-color: #e0e0e0;
      font-size: 0.75rem;
    }
  </style>
}

@if (TempData["ErrorMessage"] != null)
{
  <div class="alert alert-danger alert-dismissible" role="alert">
    @TempData["ErrorMessage"]
    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
  </div>
}

@if (TempData["SuccessMessage"] != null)
{
  <div class="alert alert-success alert-dismissible" role="alert">
    @TempData["SuccessMessage"]
    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
  </div>
}

<div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
  @foreach (var role in Model.Roles)
  {
    <div class="col">
      <div class="card h-100">
        <div class="card-body">
          <div class="d-flex flex-column">
            <div class="d-flex justify-content-between align-items-center mb-1">
              <h5 class="card-title">@role.Name.ToUpper()</h5>
              <div class="avatar-group">
                <!-- Dummy avatars - replace with actual avatars if available -->
                <div class="avatar"><i class="bx bx-user"></i></div>
                @if (role.UserCount > 1)
                {
                  <div class="avatar"><i class="bx bx-user"></i></div>
                }
                @if (role.UserCount > 2)
                {
                  <div class="avatar"><i class="bx bx-user"></i></div>
                }
                @if (role.UserCount > 3)
                {
                  <div class="avatar-more">+@(role.UserCount - 3)</div>
                }
              </div>
            </div>
            <div class="mb-3">
              <p class="card-text text-muted">
                @(string.IsNullOrEmpty(role.Description) ? "No description provided" : role.Description)
              </p>
            </div>
            <div class="d-flex justify-content-between align-items-center mt-auto">
              <span class="user-count">
                <i class="bx bx-user me-1"></i>
                Total @role.UserCount user@(role.UserCount != 1 ? "s" : "")
              </span>
              <a href="@Url.Action("Users", new { roleName = role.Name })" class="btn btn-sm btn-primary">
                <i class="bx bx-user me-1"></i> Manage Users
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  }
</div>
